{"version":3,"sources":["Context/AuthContext.js","Component/TopMenu.js","Component/Login.js","Component/Home.js","Component/Room.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","React","createContext","AuthProvider","props","state","isLogin","check","bind","user","pass","length","url","axios","get","then","res","data","password","setState","Provider","value","this","children","Component","TopMenu","useState","isOpen","setIsOpen","useContext","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","to","NavLink","Login","setUser","setPassword","Col","md","size","offset","Form","FormGroup","Label","for","Input","type","name","id","placeholder","onChange","e","target","Button","preventDefault","Home","list","setList","setName","useEffect","Breadcrumb","BreadcrumbItem","active","post","map","Card","CardBody","CardTitle","CardText","Room","match","params","catch","error","console","log","message","Table","scope","App","path","component","from","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d5b98f19.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const AuthContext = React.createContext()\r\n\r\nexport class AuthProvider extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            isLogin: 'Nah'\r\n        }\r\n        this.check = this.check.bind(this)\r\n    }\r\n\r\n    check(user, pass) {\r\n        if(user.length > 0 && pass.length > 0) {\r\n            const url = 'https://quiz-online-fpt.herokuapp.com/users/' + user\r\n            axios.get(url).then(res => {\r\n                if(pass === res.data.password) {\r\n                    this.setState({isLogin: 'Ok'})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <AuthContext.Provider value={{\r\n            isLogin: this.state.isLogin,\r\n            check: this.check\r\n        }}>\r\n            {this.props.children}\r\n        </AuthContext.Provider>\r\n    }\r\n}","import React, { useState, useContext } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from 'reactstrap';\r\nimport { AuthContext } from '../Context/AuthContext'\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nconst TopMenu = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const {isLogin} = useContext(AuthContext)\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">Fpoly</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <Link to=\"/home\">Home</Link>\r\n            </NavItem>\r\n          </Nav>\r\n          <NavLink>\r\n            <Link to=\"/login\">Login</Link>\r\n          </NavLink>\r\n          <NavLink  href=\"/login\">\r\n            isLogin {isLogin}\r\n          </NavLink>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopMenu","import React, { useState, useContext } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Col } from 'reactstrap';\r\nimport { AuthContext } from '../Context/AuthContext'\r\n\r\nconst Login = (props) => {\r\n    const [user, setUser] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const { check } = useContext(AuthContext)\r\n    return (\r\n        <Col md={{ size: 8, offset: 2 }}>\r\n            <Form>\r\n            <FormGroup>\r\n                <Label for=\"exampleEmail\" className=\"float-left\">Email</Label>\r\n                <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"user\" \r\n                    value={user} \r\n                    onChange={(e) => setUser(e.target.value)} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"examplePassword\" className=\"float-left\">Password</Label>\r\n                <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"password\" \r\n                    value={password} \r\n                    onChange={(e) => setPassword(e.target.value)}/>\r\n            </FormGroup>\r\n            <Button onClick={(e) => {\r\n                check(user, password)\r\n                e.preventDefault()\r\n            }}>Submit</Button>\r\n            </Form>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { useState, useEffect } from 'react' \r\nimport {\r\n    Card, CardBody,\r\n    CardTitle, Col, Row, CardText, Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input\r\n  } from 'reactstrap';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nimport axios from 'axios'\r\n\r\nexport default function Home() {\r\n    const [list, setList] = useState('') \r\n    const [name, setName] = useState('')\r\n    const url ='https://quiz-online-fpt.herokuapp.com/semesters'\r\n\r\n    useEffect(() => {\r\n        axios.get(url).then(res => setList(res.data))\r\n    }, [name])\r\n\r\n    const check = (name) => {\r\n        axios.post(url, {\r\n            name: name\r\n        }).then(res => setName(''))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Breadcrumb>\r\n                <BreadcrumbItem><a href=\"#\">Home</a></BreadcrumbItem>\r\n                <BreadcrumbItem active>List Semester</BreadcrumbItem>\r\n            </Breadcrumb>\r\n            <h2 className=\"text-center\">Create New Semester</h2>\r\n            <Col md={{size: 8, offset: 2}}>\r\n                <Form>\r\n                    <FormGroup>\r\n                        <Label for=\"exampleEmail\" className=\"float-left\">Semester Code</Label>\r\n                        <Input type=\"text\" name=\"name\" id=\"exampleEmail\" placeholder=\"semester code\" \r\n                            value={name} \r\n                            onChange={(e) => setName(e.target.value)} />\r\n                    </FormGroup>\r\n                    <Button onClick={(e) => {\r\n                        check(name)\r\n                        e.preventDefault()\r\n                    }}>Submit</Button>\r\n                </Form>\r\n            </Col>\r\n            <hr />\r\n            <h2 className=\"text-center\">List Semesters</h2>\r\n            <Col>\r\n                {list && list.map(e => \r\n                        <Card md={{size: 2, offset: 1}}> \r\n                            <CardBody>\r\n                                <CardTitle className=\"text-center\">Semester</CardTitle>\r\n                                <CardText>{e.name}</CardText>\r\n                                <Link to={'/room/' + e.id}>Rooms</Link>\r\n                            </CardBody>\r\n                        </Card>\r\n                )}\r\n            </Col>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n// import queryString from 'query-string'\r\nimport axios from 'axios'\r\n\r\nimport { Table, Col, Button, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nexport default function Room(props) {\r\n    const [list, setList] = useState('') \r\n    const [name, setName] = useState('')\r\n    const id = props.match.params.id\r\n    const url ='https://quiz-online-fpt.herokuapp.com/rooms/'\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(url + id).then(res => setList(res.data)).catch(error => console.log(error.message))\r\n    }, [name])\r\n\r\n    const check = (name) => {\r\n        axios.post(url, {\r\n            name: name\r\n        }).then(res => setName(''))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Col md={{size: 8, offset: 2}}>\r\n                <Form>\r\n                    <FormGroup>\r\n                        <Label for=\"exampleEmail\" className=\"float-left\">Class Code Name</Label>\r\n                        <Input type=\"text\" name=\"name\" id=\"exampleEmail\" placeholder=\"class code name\" \r\n                            value={name} \r\n                            onChange={(e) => setName(e.target.value)} />\r\n                    </FormGroup>\r\n                    <Button onClick={(e) => {\r\n                        check(name)\r\n                        e.preventDefault()\r\n                    }}>Submit</Button>\r\n                </Form>\r\n            </Col>\r\n            <hr/>\r\n            <h2 className=\"text-center\">List Class</h2>\r\n            <Col md={{size: 10, offset: 1}}>\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>ID</th>\r\n                        <th>Name</th>\r\n                        <th size={4}>&nbsp;</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {list && list.map(e => \r\n                            <tr>\r\n                                <th scope=\"row\">{e.id}</th>\r\n                                <td>{e.name}</td>\r\n                                <td><Link to={'/mark/'+e.id}>List Students</Link></td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </Table>\r\n            </Col>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nimport TopMenu from './Component/TopMenu'\nimport Login from './Component/Login'\nimport Home from './Component/Home'\nimport Room from './Component/Room'\nimport { AuthProvider } from './Context/AuthContext'\n\nfunction App() {\n  return (\n      <AuthProvider>\n        <Router>\n          <div className=\"App\">\n            <TopMenu />\n          </div>\n          <Switch>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/home\">\n              <Home />\n            </Route>\n            <Route path=\"/room/:id\" component={Room} />\n            <Redirect from=\"/\" to=\"/login\" />\n          </Switch>\n        </Router>\n      </AuthProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}